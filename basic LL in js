class Node{
  constructor(element){
    this.element=element;
    this.next=null;
  }
}
class linkedList{
  constructor(){
    this.head=null;
    this.size=0;
  }


  add(element){
    let node=new Node(element);
    let current;
    if(this.head==null){
      this.head=node;
    }else{
        current=this.head;

        while(current.next){
          current=current.next;
        }
        current.next=node;
    }
    this.size++
  }


  insertAt(element, index){
    if(index<0||index>this.size){
      console.log("Please enter the valid index.")
    }else{
      let node = new Node(element);
      let curr,prev;

      curr=this.head;

      if(index==0){
        node.next=this.head;
        this.head=node;
      }else{
        curr=this.head;
        let it=0;

        while(it<index){
          it++;
          prev=curr;
          curr=curr.next;
        }
        node.next=curr;
        prev.next=node;
      }
      this.size++;
    }
  }

    removeFrom(index){
      if(index<0||index>this.size){
        console.log("Enter valid index")
      }
      else{
        let curr,prev,it=0;
        curr=this.head;
        prev=curr;

        if(index==0){
          this.head=curr.next;
        }
        else{
          while(it<index){
            it++;
            prev=curr;
            curr=curr.next;
          }
          prev.next=curr.next;
        }
        this.size--;

        return curr.element;
    }
}

  printList(){
    let curr=this.head;
    let str="";
    while(curr){
      str+=curr.element + " ";
      curr = curr.next;
    }
    console.log(str);
  }           
}

let ll=new linkedList();

ll.add(10);
ll.add(20);
ll.add(30);
ll.insertAt(40,3);
ll.printList();
ll.removeFrom(3);
ll.printList()
